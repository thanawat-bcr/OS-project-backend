{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/thanawat.bcr/Desktop/os-project/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/thanawat.bcr/Desktop/os-project\",\"filename\":\"/Users/thanawat.bcr/Desktop/os-project/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/thanawat.bcr/Desktop/os-project\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/thanawat.bcr/Desktop/os-project",
      "filename": "/Users/thanawat.bcr/Desktop/os-project/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/thanawat.bcr/Desktop/os-project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/thanawat.bcr/Desktop/os-project/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/thanawat.bcr/Desktop/os-project/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// mqtt connection\nvar mqtt = require('mqtt');\n\nvar client = mqtt.connect('mqtt://172.16.167.2:1883', {\n  username: 'tutorism',\n  password: '1234'\n});\nconsole.log('connected  ' + client.connected);\nclient.on('connect', function () {\n  console.log('connected  ' + client.connected);\n  client.publish('test', 'connected');\n});\nclient.on('error', function (error) {\n  console.log(\"Can't connect\" + error);\n}); // // mongoose connection\n// const mongoose = require('mongoose');\n// mongoose.connect(\n//   'mongodb://tutorism:1234@172.16.167.2:27017/test?authSource=admin',\n//   // 'mongodb://tutorism:1234@127.0.0.1:27017/test?authSource=admin',\n//   {\n//     useNewUrlParser: true,\n//     useUnifiedTopology: true,\n//   }\n// );\n\nvar PORT = process.env.PORT || 3000;\nvar app = (0, _express[\"default\"])();\napp.listen(PORT); // // DB connection\n// const db = mongoose.connection;\n// db.on('error', console.error.bind(console, 'connection error:'));\n// db.once('open', function () {\n//   // we're connected!\n//   console.log('DB connected');\n// });\n// // Test schema\n// const productSchema = mongoose.Schema({\n//   name: String,\n//   price: Number,\n// });\n// const Product = mongoose.model('Product', productSchema);\n// const userSchema = mongoose.Schema(\n//   {\n//     name: String,\n//     age: Number,\n//   },\n//   { collection: 'user' }\n// );\n// const User = mongoose.model('User', userSchema);\n\napp.get('/', function (req, res) {\n  return res.status(200).send('hello');\n});\napp.get('/open', function (req, res) {\n  client.publish('test', 'open');\n  return res.status(200).send('hello');\n});\napp.get('/close', function (req, res) {\n  client.publish('test', 'close');\n  return res.status(200).send('hello');\n}); // app.get('/test', (req, res) => {\n//   const product = new Product({\n//     name: 'Tutor',\n//     price: 1000,\n//   });\n//   product\n//     .save()\n//     .then((doc) => console.log(doc))\n//     .catch((err) => console.log(err));\n//   return res.status(200).send('hello');\n// });\n// app.get('/insert/user', (req, res) => {\n//   const user = new User({\n//     name: 'No Collection',\n//     age: 20,\n//   });\n//   user\n//     .save()\n//     .then((doc) => {\n//       console.log(doc);\n//       return res.status(200).send('hello');\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       return res.status(400).send('hello');\n//     });\n// });\n// app.get('/find/user', (req, res) => {\n//   User.find()\n//     .then((doc) => {\n//       console.log(doc);\n//       return res.status(200).json({ log: doc });\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       return res.status(401).json({ log: 'success' });\n//     });\n// });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1xdHQiLCJyZXF1aXJlIiwiY2xpZW50IiwiY29ubmVjdCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdGVkIiwib24iLCJwdWJsaXNoIiwiZXJyb3IiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsImFwcCIsImxpc3RlbiIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQTtBQUNBLElBQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixJQUFJLENBQUNHLE9BQUwsQ0FBYSwwQkFBYixFQUF5QztBQUNwREMsRUFBQUEsUUFBUSxFQUFFLFVBRDBDO0FBRXBEQyxFQUFBQSxRQUFRLEVBQUU7QUFGMEMsQ0FBekMsQ0FBYjtBQUlBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBZ0JMLE1BQU0sQ0FBQ00sU0FBbkM7QUFFQU4sTUFBTSxDQUFDTyxFQUFQLENBQVUsU0FBVixFQUFxQixZQUFZO0FBQy9CSCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBZ0JMLE1BQU0sQ0FBQ00sU0FBbkM7QUFDQU4sRUFBQUEsTUFBTSxDQUFDUSxPQUFQLENBQWUsTUFBZixFQUF1QixXQUF2QjtBQUNELENBSEQ7QUFLQVIsTUFBTSxDQUFDTyxFQUFQLENBQVUsT0FBVixFQUFtQixVQUFVRSxLQUFWLEVBQWlCO0FBQ2xDTCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQkFBa0JJLEtBQTlCO0FBQ0QsQ0FGRCxFLENBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUEvQjtBQUNBLElBQUlHLEdBQUcsR0FBRywwQkFBVjtBQUNBQSxHQUFHLENBQUNDLE1BQUosQ0FBV0osSUFBWCxFLENBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBRyxHQUFHLENBQUNFLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDekIsU0FBT0EsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsT0FBckIsQ0FBUDtBQUNELENBRkQ7QUFHQU4sR0FBRyxDQUFDRSxHQUFKLENBQVEsT0FBUixFQUFpQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM3QmpCLEVBQUFBLE1BQU0sQ0FBQ1EsT0FBUCxDQUFlLE1BQWYsRUFBdUIsTUFBdkI7QUFDQSxTQUFPUyxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixPQUFyQixDQUFQO0FBQ0QsQ0FIRDtBQUlBTixHQUFHLENBQUNFLEdBQUosQ0FBUSxRQUFSLEVBQWtCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzlCakIsRUFBQUEsTUFBTSxDQUFDUSxPQUFQLENBQWUsTUFBZixFQUF1QixPQUF2QjtBQUNBLFNBQU9TLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLE9BQXJCLENBQVA7QUFDRCxDQUhELEUsQ0FLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90aGFuYXdhdC5iY3IvRGVza3RvcC9vcy1wcm9qZWN0LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG4vLyBtcXR0IGNvbm5lY3Rpb25cbnZhciBtcXR0ID0gcmVxdWlyZSgnbXF0dCcpO1xudmFyIGNsaWVudCA9IG1xdHQuY29ubmVjdCgnbXF0dDovLzE3Mi4xNi4xNjcuMjoxODgzJywge1xuICB1c2VybmFtZTogJ3R1dG9yaXNtJyxcbiAgcGFzc3dvcmQ6ICcxMjM0Jyxcbn0pO1xuY29uc29sZS5sb2coJ2Nvbm5lY3RlZCAgJyArIGNsaWVudC5jb25uZWN0ZWQpO1xuXG5jbGllbnQub24oJ2Nvbm5lY3QnLCBmdW5jdGlvbiAoKSB7XG4gIGNvbnNvbGUubG9nKCdjb25uZWN0ZWQgICcgKyBjbGllbnQuY29ubmVjdGVkKTtcbiAgY2xpZW50LnB1Ymxpc2goJ3Rlc3QnLCAnY29ubmVjdGVkJyk7XG59KTtcblxuY2xpZW50Lm9uKCdlcnJvcicsIGZ1bmN0aW9uIChlcnJvcikge1xuICBjb25zb2xlLmxvZyhcIkNhbid0IGNvbm5lY3RcIiArIGVycm9yKTtcbn0pO1xuXG4vLyAvLyBtb25nb29zZSBjb25uZWN0aW9uXG4vLyBjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG4vLyBtb25nb29zZS5jb25uZWN0KFxuLy8gICAnbW9uZ29kYjovL3R1dG9yaXNtOjEyMzRAMTcyLjE2LjE2Ny4yOjI3MDE3L3Rlc3Q/YXV0aFNvdXJjZT1hZG1pbicsXG4vLyAgIC8vICdtb25nb2RiOi8vdHV0b3Jpc206MTIzNEAxMjcuMC4wLjE6MjcwMTcvdGVzdD9hdXRoU291cmNlPWFkbWluJyxcbi8vICAge1xuLy8gICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbi8vICAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4vLyAgIH1cbi8vICk7XG5cbnZhciBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xudmFyIGFwcCA9IGV4cHJlc3MoKTtcbmFwcC5saXN0ZW4oUE9SVCk7XG5cbi8vIC8vIERCIGNvbm5lY3Rpb25cbi8vIGNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcbi8vIGRiLm9uKCdlcnJvcicsIGNvbnNvbGUuZXJyb3IuYmluZChjb25zb2xlLCAnY29ubmVjdGlvbiBlcnJvcjonKSk7XG4vLyBkYi5vbmNlKCdvcGVuJywgZnVuY3Rpb24gKCkge1xuLy8gICAvLyB3ZSdyZSBjb25uZWN0ZWQhXG4vLyAgIGNvbnNvbGUubG9nKCdEQiBjb25uZWN0ZWQnKTtcbi8vIH0pO1xuXG4vLyAvLyBUZXN0IHNjaGVtYVxuLy8gY29uc3QgcHJvZHVjdFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYSh7XG4vLyAgIG5hbWU6IFN0cmluZyxcbi8vICAgcHJpY2U6IE51bWJlcixcbi8vIH0pO1xuLy8gY29uc3QgUHJvZHVjdCA9IG1vbmdvb3NlLm1vZGVsKCdQcm9kdWN0JywgcHJvZHVjdFNjaGVtYSk7XG5cbi8vIGNvbnN0IHVzZXJTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoXG4vLyAgIHtcbi8vICAgICBuYW1lOiBTdHJpbmcsXG4vLyAgICAgYWdlOiBOdW1iZXIsXG4vLyAgIH0sXG4vLyAgIHsgY29sbGVjdGlvbjogJ3VzZXInIH1cbi8vICk7XG4vLyBjb25zdCBVc2VyID0gbW9uZ29vc2UubW9kZWwoJ1VzZXInLCB1c2VyU2NoZW1hKTtcblxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoJ2hlbGxvJyk7XG59KTtcbmFwcC5nZXQoJy9vcGVuJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNsaWVudC5wdWJsaXNoKCd0ZXN0JywgJ29wZW4nKTtcbiAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdoZWxsbycpO1xufSk7XG5hcHAuZ2V0KCcvY2xvc2UnLCAocmVxLCByZXMpID0+IHtcbiAgY2xpZW50LnB1Ymxpc2goJ3Rlc3QnLCAnY2xvc2UnKTtcbiAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdoZWxsbycpO1xufSk7XG5cbi8vIGFwcC5nZXQoJy90ZXN0JywgKHJlcSwgcmVzKSA9PiB7XG4vLyAgIGNvbnN0IHByb2R1Y3QgPSBuZXcgUHJvZHVjdCh7XG4vLyAgICAgbmFtZTogJ1R1dG9yJyxcbi8vICAgICBwcmljZTogMTAwMCxcbi8vICAgfSk7XG4vLyAgIHByb2R1Y3Rcbi8vICAgICAuc2F2ZSgpXG4vLyAgICAgLnRoZW4oKGRvYykgPT4gY29uc29sZS5sb2coZG9jKSlcbi8vICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XG4vLyAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCgnaGVsbG8nKTtcbi8vIH0pO1xuXG4vLyBhcHAuZ2V0KCcvaW5zZXJ0L3VzZXInLCAocmVxLCByZXMpID0+IHtcbi8vICAgY29uc3QgdXNlciA9IG5ldyBVc2VyKHtcbi8vICAgICBuYW1lOiAnTm8gQ29sbGVjdGlvbicsXG4vLyAgICAgYWdlOiAyMCxcbi8vICAgfSk7XG5cbi8vICAgdXNlclxuLy8gICAgIC5zYXZlKClcbi8vICAgICAudGhlbigoZG9jKSA9PiB7XG4vLyAgICAgICBjb25zb2xlLmxvZyhkb2MpO1xuLy8gICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdoZWxsbycpO1xuLy8gICAgIH0pXG4vLyAgICAgLmNhdGNoKChlcnIpID0+IHtcbi8vICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4vLyAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoJ2hlbGxvJyk7XG4vLyAgICAgfSk7XG4vLyB9KTtcblxuLy8gYXBwLmdldCgnL2ZpbmQvdXNlcicsIChyZXEsIHJlcykgPT4ge1xuLy8gICBVc2VyLmZpbmQoKVxuLy8gICAgIC50aGVuKChkb2MpID0+IHtcbi8vICAgICAgIGNvbnNvbGUubG9nKGRvYyk7XG4vLyAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBsb2c6IGRvYyB9KTtcbi8vICAgICB9KVxuLy8gICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4vLyAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuLy8gICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbG9nOiAnc3VjY2VzcycgfSk7XG4vLyAgICAgfSk7XG4vLyB9KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mqtt",
        "require",
        "client",
        "connect",
        "username",
        "password",
        "console",
        "log",
        "connected",
        "on",
        "publish",
        "error",
        "PORT",
        "process",
        "env",
        "app",
        "listen",
        "get",
        "req",
        "res",
        "status",
        "send"
      ],
      "mappings": ";;AAAA;;;;AAEA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGF,IAAI,CAACG,OAAL,CAAa,0BAAb,EAAyC;AACpDC,EAAAA,QAAQ,EAAE,UAD0C;AAEpDC,EAAAA,QAAQ,EAAE;AAF0C,CAAzC,CAAb;AAIAC,OAAO,CAACC,GAAR,CAAY,gBAAgBL,MAAM,CAACM,SAAnC;AAEAN,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqB,YAAY;AAC/BH,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBL,MAAM,CAACM,SAAnC;AACAN,EAAAA,MAAM,CAACQ,OAAP,CAAe,MAAf,EAAuB,WAAvB;AACD,CAHD;AAKAR,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmB,UAAUE,KAAV,EAAiB;AAClCL,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBI,KAA9B;AACD,CAFD,E,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAA/B;AACA,IAAIG,GAAG,GAAG,0BAAV;AACAA,GAAG,CAACC,MAAJ,CAAWJ,IAAX,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAG,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzB,SAAOA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB,CAAP;AACD,CAFD;AAGAN,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BjB,EAAAA,MAAM,CAACQ,OAAP,CAAe,MAAf,EAAuB,MAAvB;AACA,SAAOS,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB,CAAP;AACD,CAHD;AAIAN,GAAG,CAACE,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BjB,EAAAA,MAAM,CAACQ,OAAP,CAAe,MAAf,EAAuB,OAAvB;AACA,SAAOS,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB,CAAP;AACD,CAHD,E,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
      "sourcesContent": [
        "import express from 'express';\n\n// mqtt connection\nvar mqtt = require('mqtt');\nvar client = mqtt.connect('mqtt://172.16.167.2:1883', {\n  username: 'tutorism',\n  password: '1234',\n});\nconsole.log('connected  ' + client.connected);\n\nclient.on('connect', function () {\n  console.log('connected  ' + client.connected);\n  client.publish('test', 'connected');\n});\n\nclient.on('error', function (error) {\n  console.log(\"Can't connect\" + error);\n});\n\n// // mongoose connection\n// const mongoose = require('mongoose');\n// mongoose.connect(\n//   'mongodb://tutorism:1234@172.16.167.2:27017/test?authSource=admin',\n//   // 'mongodb://tutorism:1234@127.0.0.1:27017/test?authSource=admin',\n//   {\n//     useNewUrlParser: true,\n//     useUnifiedTopology: true,\n//   }\n// );\n\nvar PORT = process.env.PORT || 3000;\nvar app = express();\napp.listen(PORT);\n\n// // DB connection\n// const db = mongoose.connection;\n// db.on('error', console.error.bind(console, 'connection error:'));\n// db.once('open', function () {\n//   // we're connected!\n//   console.log('DB connected');\n// });\n\n// // Test schema\n// const productSchema = mongoose.Schema({\n//   name: String,\n//   price: Number,\n// });\n// const Product = mongoose.model('Product', productSchema);\n\n// const userSchema = mongoose.Schema(\n//   {\n//     name: String,\n//     age: Number,\n//   },\n//   { collection: 'user' }\n// );\n// const User = mongoose.model('User', userSchema);\n\napp.get('/', (req, res) => {\n  return res.status(200).send('hello');\n});\napp.get('/open', (req, res) => {\n  client.publish('test', 'open');\n  return res.status(200).send('hello');\n});\napp.get('/close', (req, res) => {\n  client.publish('test', 'close');\n  return res.status(200).send('hello');\n});\n\n// app.get('/test', (req, res) => {\n//   const product = new Product({\n//     name: 'Tutor',\n//     price: 1000,\n//   });\n//   product\n//     .save()\n//     .then((doc) => console.log(doc))\n//     .catch((err) => console.log(err));\n//   return res.status(200).send('hello');\n// });\n\n// app.get('/insert/user', (req, res) => {\n//   const user = new User({\n//     name: 'No Collection',\n//     age: 20,\n//   });\n\n//   user\n//     .save()\n//     .then((doc) => {\n//       console.log(doc);\n//       return res.status(200).send('hello');\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       return res.status(400).send('hello');\n//     });\n// });\n\n// app.get('/find/user', (req, res) => {\n//   User.find()\n//     .then((doc) => {\n//       console.log(doc);\n//       return res.status(200).json({ log: doc });\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       return res.status(401).json({ log: 'success' });\n//     });\n// });\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1617030010089
  }
}