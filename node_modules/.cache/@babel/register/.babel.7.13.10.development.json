{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/thanawat.bcr/Desktop/os-project/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/thanawat.bcr/Desktop/os-project\",\"filename\":\"/Users/thanawat.bcr/Desktop/os-project/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/thanawat.bcr/Desktop/os-project\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/thanawat.bcr/Desktop/os-project",
      "filename": "/Users/thanawat.bcr/Desktop/os-project/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/thanawat.bcr/Desktop/os-project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/thanawat.bcr/Desktop/os-project/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/thanawat.bcr/Desktop/os-project/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PORT = process.env.PORT || 3000;\nvar app = (0, _express[\"default\"])();\napp.listen(PORT); // mqtt connection\n\nvar mqtt = require('mqtt');\n\nvar client = mqtt.connect('mqtt://127.0.0.1:1883', {\n  username: 'tutorism',\n  password: '1234'\n}); // var client = mqtt.connect('mqtt://172.16.167.2:1883', {\n//   username: 'tutorism',\n//   password: '1234',\n// });\n\nconsole.log('connected  ' + client.connected);\nclient.on('connect', function () {\n  console.log('connected  ' + client.connected);\n  client.publish('test', 'connected');\n});\nclient.on('error', function (error) {\n  console.log(\"Can't connect\" + error);\n}); // mongoose connection\n// const mongoose = require('mongoose');\n// mongoose.connect(\n//   'mongodb://tutorism:1234@172.16.167.2:27017/test?authSource=admin',\n//   // 'mongodb://tutorism:1234@127.0.0.1:27017/test?authSource=admin',\n//   {\n//     useNewUrlParser: true,\n//     useUnifiedTopology: true,\n//   }\n// );\n// // DB connection\n// const db = mongoose.connection;\n// db.on('error', console.error.bind(console, 'connection error:'));\n// db.once('open', function () {\n//   // we're connected!\n//   console.log('DB connected');\n// });\n// // Test schema\n// const productSchema = mongoose.Schema({\n//   name: String,\n//   price: Number,\n// });\n// const Product = mongoose.model('Product', productSchema);\n// const userSchema = mongoose.Schema(\n//   {\n//     name: String,\n//     age: Number,\n//   },\n//   { collection: 'user' }\n// );\n// const User = mongoose.model('User', userSchema);\n\napp.get('/', function (req, res) {\n  return res.status(200).send('hello');\n});\napp.get('/open', function (req, res) {\n  client.publish('test', 'open');\n  return res.status(200).send('open');\n});\napp.get('/close', function (req, res) {\n  client.publish('test', 'close');\n  return res.status(200).send('close');\n});\napp.get('/test', function (req, res) {\n  client.publish('test', 'Hello World');\n  return res.status(200).send('success');\n});\napp.get('/temp', function (req, res) {\n  // client.publish('temp', '' + Math.round(Math.random() * 100));\n  var temp = req.query.temp;\n  client.publish('temp', '' + temp);\n  return res.status(200).send('success');\n});\napp.get('/timestamp', function (req, res) {\n  client.publish('timestamp', '' + new Date(Date.now()).toString().split('G')[0]);\n  return res.status(200).send('success');\n}); // app.get('/test', (req, res) => {\n//   const product = new Product({\n//     name: 'Tutor',\n//     price: 1000,\n//   });\n//   product\n//     .save()\n//     .then((doc) => console.log(doc))\n//     .catch((err) => console.log(err));\n//   return res.status(200).send('hello');\n// });\n// app.get('/insert/user', (req, res) => {\n//   const user = new User({\n//     name: 'No Collection',\n//     age: 20,\n//   });\n//   user\n//     .save()\n//     .then((doc) => {\n//       console.log(doc);\n//       return res.status(200).send('hello');\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       return res.status(400).send('hello');\n//     });\n// });\n// app.get('/find/user', (req, res) => {\n//   User.find()\n//     .then((doc) => {\n//       console.log(doc);\n//       return res.status(200).json({ log: doc });\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       return res.status(401).json({ log: 'success' });\n//     });\n// });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwiYXBwIiwibGlzdGVuIiwibXF0dCIsInJlcXVpcmUiLCJjbGllbnQiLCJjb25uZWN0IiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImNvbnNvbGUiLCJsb2ciLCJjb25uZWN0ZWQiLCJvbiIsInB1Ymxpc2giLCJlcnJvciIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiLCJ0ZW1wIiwicXVlcnkiLCJEYXRlIiwibm93IiwidG9TdHJpbmciLCJzcGxpdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUVBLElBQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBL0I7QUFDQSxJQUFJRyxHQUFHLEdBQUcsMEJBQVY7QUFDQUEsR0FBRyxDQUFDQyxNQUFKLENBQVdKLElBQVgsRSxDQUVBOztBQUNBLElBQUlLLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixJQUFJLENBQUNHLE9BQUwsQ0FBYSx1QkFBYixFQUFzQztBQUNqREMsRUFBQUEsUUFBUSxFQUFFLFVBRHVDO0FBRWpEQyxFQUFBQSxRQUFRLEVBQUU7QUFGdUMsQ0FBdEMsQ0FBYixDLENBSUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFnQkwsTUFBTSxDQUFDTSxTQUFuQztBQUVBTixNQUFNLENBQUNPLEVBQVAsQ0FBVSxTQUFWLEVBQXFCLFlBQVk7QUFDL0JILEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFnQkwsTUFBTSxDQUFDTSxTQUFuQztBQUNBTixFQUFBQSxNQUFNLENBQUNRLE9BQVAsQ0FBZSxNQUFmLEVBQXVCLFdBQXZCO0FBQ0QsQ0FIRDtBQUtBUixNQUFNLENBQUNPLEVBQVAsQ0FBVSxPQUFWLEVBQW1CLFVBQVVFLEtBQVYsRUFBaUI7QUFDbENMLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtCQUFrQkksS0FBOUI7QUFDRCxDQUZELEUsQ0FJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQWIsR0FBRyxDQUFDYyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pCLFNBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLE9BQXJCLENBQVA7QUFDRCxDQUZEO0FBSUFsQixHQUFHLENBQUNjLEdBQUosQ0FBUSxPQUFSLEVBQWlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCWixFQUFBQSxNQUFNLENBQUNRLE9BQVAsQ0FBZSxNQUFmLEVBQXVCLE1BQXZCO0FBQ0EsU0FBT0ksR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsTUFBckIsQ0FBUDtBQUNELENBSEQ7QUFJQWxCLEdBQUcsQ0FBQ2MsR0FBSixDQUFRLFFBQVIsRUFBa0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDOUJaLEVBQUFBLE1BQU0sQ0FBQ1EsT0FBUCxDQUFlLE1BQWYsRUFBdUIsT0FBdkI7QUFDQSxTQUFPSSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixPQUFyQixDQUFQO0FBQ0QsQ0FIRDtBQUlBbEIsR0FBRyxDQUFDYyxHQUFKLENBQVEsT0FBUixFQUFpQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM3QlosRUFBQUEsTUFBTSxDQUFDUSxPQUFQLENBQWUsTUFBZixFQUF1QixhQUF2QjtBQUNBLFNBQU9JLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLFNBQXJCLENBQVA7QUFDRCxDQUhEO0FBSUFsQixHQUFHLENBQUNjLEdBQUosQ0FBUSxPQUFSLEVBQWlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCO0FBRDZCLE1BRXJCRyxJQUZxQixHQUVaSixHQUFHLENBQUNLLEtBRlEsQ0FFckJELElBRnFCO0FBRzdCZixFQUFBQSxNQUFNLENBQUNRLE9BQVAsQ0FBZSxNQUFmLEVBQXVCLEtBQUtPLElBQTVCO0FBQ0EsU0FBT0gsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsU0FBckIsQ0FBUDtBQUNELENBTEQ7QUFNQWxCLEdBQUcsQ0FBQ2MsR0FBSixDQUFRLFlBQVIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbENaLEVBQUFBLE1BQU0sQ0FBQ1EsT0FBUCxDQUNFLFdBREYsRUFFRSxLQUFLLElBQUlTLElBQUosQ0FBU0EsSUFBSSxDQUFDQyxHQUFMLEVBQVQsRUFBcUJDLFFBQXJCLEdBQWdDQyxLQUFoQyxDQUFzQyxHQUF0QyxFQUEyQyxDQUEzQyxDQUZQO0FBSUEsU0FBT1IsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsU0FBckIsQ0FBUDtBQUNELENBTkQsRSxDQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiL1VzZXJzL3RoYW5hd2F0LmJjci9EZXNrdG9wL29zLXByb2plY3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbnZhciBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xudmFyIGFwcCA9IGV4cHJlc3MoKTtcbmFwcC5saXN0ZW4oUE9SVCk7XG5cbi8vIG1xdHQgY29ubmVjdGlvblxudmFyIG1xdHQgPSByZXF1aXJlKCdtcXR0Jyk7XG52YXIgY2xpZW50ID0gbXF0dC5jb25uZWN0KCdtcXR0Oi8vMTI3LjAuMC4xOjE4ODMnLCB7XG4gIHVzZXJuYW1lOiAndHV0b3Jpc20nLFxuICBwYXNzd29yZDogJzEyMzQnLFxufSk7XG4vLyB2YXIgY2xpZW50ID0gbXF0dC5jb25uZWN0KCdtcXR0Oi8vMTcyLjE2LjE2Ny4yOjE4ODMnLCB7XG4vLyAgIHVzZXJuYW1lOiAndHV0b3Jpc20nLFxuLy8gICBwYXNzd29yZDogJzEyMzQnLFxuLy8gfSk7XG5jb25zb2xlLmxvZygnY29ubmVjdGVkICAnICsgY2xpZW50LmNvbm5lY3RlZCk7XG5cbmNsaWVudC5vbignY29ubmVjdCcsIGZ1bmN0aW9uICgpIHtcbiAgY29uc29sZS5sb2coJ2Nvbm5lY3RlZCAgJyArIGNsaWVudC5jb25uZWN0ZWQpO1xuICBjbGllbnQucHVibGlzaCgndGVzdCcsICdjb25uZWN0ZWQnKTtcbn0pO1xuXG5jbGllbnQub24oJ2Vycm9yJywgZnVuY3Rpb24gKGVycm9yKSB7XG4gIGNvbnNvbGUubG9nKFwiQ2FuJ3QgY29ubmVjdFwiICsgZXJyb3IpO1xufSk7XG5cbi8vIG1vbmdvb3NlIGNvbm5lY3Rpb25cbi8vIGNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbi8vIG1vbmdvb3NlLmNvbm5lY3QoXG4vLyAgICdtb25nb2RiOi8vdHV0b3Jpc206MTIzNEAxNzIuMTYuMTY3LjI6MjcwMTcvdGVzdD9hdXRoU291cmNlPWFkbWluJyxcbi8vICAgLy8gJ21vbmdvZGI6Ly90dXRvcmlzbToxMjM0QDEyNy4wLjAuMToyNzAxNy90ZXN0P2F1dGhTb3VyY2U9YWRtaW4nLFxuLy8gICB7XG4vLyAgICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuLy8gICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcbi8vICAgfVxuLy8gKTtcblxuLy8gLy8gREIgY29ubmVjdGlvblxuLy8gY29uc3QgZGIgPSBtb25nb29zZS5jb25uZWN0aW9uO1xuLy8gZGIub24oJ2Vycm9yJywgY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUsICdjb25uZWN0aW9uIGVycm9yOicpKTtcbi8vIGRiLm9uY2UoJ29wZW4nLCBmdW5jdGlvbiAoKSB7XG4vLyAgIC8vIHdlJ3JlIGNvbm5lY3RlZCFcbi8vICAgY29uc29sZS5sb2coJ0RCIGNvbm5lY3RlZCcpO1xuLy8gfSk7XG5cbi8vIC8vIFRlc3Qgc2NoZW1hXG4vLyBjb25zdCBwcm9kdWN0U2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hKHtcbi8vICAgbmFtZTogU3RyaW5nLFxuLy8gICBwcmljZTogTnVtYmVyLFxuLy8gfSk7XG4vLyBjb25zdCBQcm9kdWN0ID0gbW9uZ29vc2UubW9kZWwoJ1Byb2R1Y3QnLCBwcm9kdWN0U2NoZW1hKTtcblxuLy8gY29uc3QgdXNlclNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYShcbi8vICAge1xuLy8gICAgIG5hbWU6IFN0cmluZyxcbi8vICAgICBhZ2U6IE51bWJlcixcbi8vICAgfSxcbi8vICAgeyBjb2xsZWN0aW9uOiAndXNlcicgfVxuLy8gKTtcbi8vIGNvbnN0IFVzZXIgPSBtb25nb29zZS5tb2RlbCgnVXNlcicsIHVzZXJTY2hlbWEpO1xuXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCgnaGVsbG8nKTtcbn0pO1xuXG5hcHAuZ2V0KCcvb3BlbicsIChyZXEsIHJlcykgPT4ge1xuICBjbGllbnQucHVibGlzaCgndGVzdCcsICdvcGVuJyk7XG4gIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCgnb3BlbicpO1xufSk7XG5hcHAuZ2V0KCcvY2xvc2UnLCAocmVxLCByZXMpID0+IHtcbiAgY2xpZW50LnB1Ymxpc2goJ3Rlc3QnLCAnY2xvc2UnKTtcbiAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdjbG9zZScpO1xufSk7XG5hcHAuZ2V0KCcvdGVzdCcsIChyZXEsIHJlcykgPT4ge1xuICBjbGllbnQucHVibGlzaCgndGVzdCcsICdIZWxsbyBXb3JsZCcpO1xuICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoJ3N1Y2Nlc3MnKTtcbn0pO1xuYXBwLmdldCgnL3RlbXAnLCAocmVxLCByZXMpID0+IHtcbiAgLy8gY2xpZW50LnB1Ymxpc2goJ3RlbXAnLCAnJyArIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDEwMCkpO1xuICBjb25zdCB7IHRlbXAgfSA9IHJlcS5xdWVyeTtcbiAgY2xpZW50LnB1Ymxpc2goJ3RlbXAnLCAnJyArIHRlbXApO1xuICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoJ3N1Y2Nlc3MnKTtcbn0pO1xuYXBwLmdldCgnL3RpbWVzdGFtcCcsIChyZXEsIHJlcykgPT4ge1xuICBjbGllbnQucHVibGlzaChcbiAgICAndGltZXN0YW1wJyxcbiAgICAnJyArIG5ldyBEYXRlKERhdGUubm93KCkpLnRvU3RyaW5nKCkuc3BsaXQoJ0cnKVswXVxuICApO1xuICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoJ3N1Y2Nlc3MnKTtcbn0pO1xuXG4vLyBhcHAuZ2V0KCcvdGVzdCcsIChyZXEsIHJlcykgPT4ge1xuLy8gICBjb25zdCBwcm9kdWN0ID0gbmV3IFByb2R1Y3Qoe1xuLy8gICAgIG5hbWU6ICdUdXRvcicsXG4vLyAgICAgcHJpY2U6IDEwMDAsXG4vLyAgIH0pO1xuLy8gICBwcm9kdWN0XG4vLyAgICAgLnNhdmUoKVxuLy8gICAgIC50aGVuKChkb2MpID0+IGNvbnNvbGUubG9nKGRvYykpXG4vLyAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuLy8gICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoJ2hlbGxvJyk7XG4vLyB9KTtcblxuLy8gYXBwLmdldCgnL2luc2VydC91c2VyJywgKHJlcSwgcmVzKSA9PiB7XG4vLyAgIGNvbnN0IHVzZXIgPSBuZXcgVXNlcih7XG4vLyAgICAgbmFtZTogJ05vIENvbGxlY3Rpb24nLFxuLy8gICAgIGFnZTogMjAsXG4vLyAgIH0pO1xuXG4vLyAgIHVzZXJcbi8vICAgICAuc2F2ZSgpXG4vLyAgICAgLnRoZW4oKGRvYykgPT4ge1xuLy8gICAgICAgY29uc29sZS5sb2coZG9jKTtcbi8vICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCgnaGVsbG8nKTtcbi8vICAgICB9KVxuLy8gICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4vLyAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuLy8gICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKCdoZWxsbycpO1xuLy8gICAgIH0pO1xuLy8gfSk7XG5cbi8vIGFwcC5nZXQoJy9maW5kL3VzZXInLCAocmVxLCByZXMpID0+IHtcbi8vICAgVXNlci5maW5kKClcbi8vICAgICAudGhlbigoZG9jKSA9PiB7XG4vLyAgICAgICBjb25zb2xlLmxvZyhkb2MpO1xuLy8gICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbG9nOiBkb2MgfSk7XG4vLyAgICAgfSlcbi8vICAgICAuY2F0Y2goKGVycikgPT4ge1xuLy8gICAgICAgY29uc29sZS5sb2coZXJyKTtcbi8vICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGxvZzogJ3N1Y2Nlc3MnIH0pO1xuLy8gICAgIH0pO1xuLy8gfSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "PORT",
        "process",
        "env",
        "app",
        "listen",
        "mqtt",
        "require",
        "client",
        "connect",
        "username",
        "password",
        "console",
        "log",
        "connected",
        "on",
        "publish",
        "error",
        "get",
        "req",
        "res",
        "status",
        "send",
        "temp",
        "query",
        "Date",
        "now",
        "toString",
        "split"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
      "sourcesContent": [
        "import express from 'express';\n\nvar PORT = process.env.PORT || 3000;\nvar app = express();\napp.listen(PORT);\n\n// mqtt connection\nvar mqtt = require('mqtt');\nvar client = mqtt.connect('mqtt://127.0.0.1:1883', {\n  username: 'tutorism',\n  password: '1234',\n});\n// var client = mqtt.connect('mqtt://172.16.167.2:1883', {\n//   username: 'tutorism',\n//   password: '1234',\n// });\nconsole.log('connected  ' + client.connected);\n\nclient.on('connect', function () {\n  console.log('connected  ' + client.connected);\n  client.publish('test', 'connected');\n});\n\nclient.on('error', function (error) {\n  console.log(\"Can't connect\" + error);\n});\n\n// mongoose connection\n// const mongoose = require('mongoose');\n// mongoose.connect(\n//   'mongodb://tutorism:1234@172.16.167.2:27017/test?authSource=admin',\n//   // 'mongodb://tutorism:1234@127.0.0.1:27017/test?authSource=admin',\n//   {\n//     useNewUrlParser: true,\n//     useUnifiedTopology: true,\n//   }\n// );\n\n// // DB connection\n// const db = mongoose.connection;\n// db.on('error', console.error.bind(console, 'connection error:'));\n// db.once('open', function () {\n//   // we're connected!\n//   console.log('DB connected');\n// });\n\n// // Test schema\n// const productSchema = mongoose.Schema({\n//   name: String,\n//   price: Number,\n// });\n// const Product = mongoose.model('Product', productSchema);\n\n// const userSchema = mongoose.Schema(\n//   {\n//     name: String,\n//     age: Number,\n//   },\n//   { collection: 'user' }\n// );\n// const User = mongoose.model('User', userSchema);\n\napp.get('/', (req, res) => {\n  return res.status(200).send('hello');\n});\n\napp.get('/open', (req, res) => {\n  client.publish('test', 'open');\n  return res.status(200).send('open');\n});\napp.get('/close', (req, res) => {\n  client.publish('test', 'close');\n  return res.status(200).send('close');\n});\napp.get('/test', (req, res) => {\n  client.publish('test', 'Hello World');\n  return res.status(200).send('success');\n});\napp.get('/temp', (req, res) => {\n  // client.publish('temp', '' + Math.round(Math.random() * 100));\n  const { temp } = req.query;\n  client.publish('temp', '' + temp);\n  return res.status(200).send('success');\n});\napp.get('/timestamp', (req, res) => {\n  client.publish(\n    'timestamp',\n    '' + new Date(Date.now()).toString().split('G')[0]\n  );\n  return res.status(200).send('success');\n});\n\n// app.get('/test', (req, res) => {\n//   const product = new Product({\n//     name: 'Tutor',\n//     price: 1000,\n//   });\n//   product\n//     .save()\n//     .then((doc) => console.log(doc))\n//     .catch((err) => console.log(err));\n//   return res.status(200).send('hello');\n// });\n\n// app.get('/insert/user', (req, res) => {\n//   const user = new User({\n//     name: 'No Collection',\n//     age: 20,\n//   });\n\n//   user\n//     .save()\n//     .then((doc) => {\n//       console.log(doc);\n//       return res.status(200).send('hello');\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       return res.status(400).send('hello');\n//     });\n// });\n\n// app.get('/find/user', (req, res) => {\n//   User.find()\n//     .then((doc) => {\n//       console.log(doc);\n//       return res.status(200).json({ log: doc });\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       return res.status(401).json({ log: 'success' });\n//     });\n// });\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1617174409744
  }
}