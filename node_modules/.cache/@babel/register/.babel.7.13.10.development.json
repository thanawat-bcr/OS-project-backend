{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/thanawat.bcr/Desktop/os-project/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/thanawat.bcr/Desktop/os-project\",\"filename\":\"/Users/thanawat.bcr/Desktop/os-project/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/thanawat.bcr/Desktop/os-project\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/thanawat.bcr/Desktop/os-project",
      "filename": "/Users/thanawat.bcr/Desktop/os-project/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/thanawat.bcr/Desktop/os-project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/thanawat.bcr/Desktop/os-project/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/thanawat.bcr/Desktop/os-project/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PORT = process.env.PORT || 3000;\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.listen(PORT); // mqtt connection\n\nvar mqtt = require('mqtt');\n\nvar client = mqtt.connect('mqtt://127.0.0.1:1883', {\n  username: 'tutorism',\n  password: '1234'\n}); // var client = mqtt.connect('mqtt://192.168.1.37:1883', {\n//   username: 'tutorism',\n//   password: '1234',\n// });\n\nconsole.log('connected  ' + client.connected);\nclient.on('connect', function () {\n  console.log('connected  ' + client.connected);\n  client.publish('test', 'connected');\n});\nclient.on('error', function (error) {\n  console.log(\"Can't connect\" + error);\n}); // mongoose connection\n\nvar mongoose = require('mongoose');\n\nmongoose.connect( // 'mongodb://tutorism:1234@192.168.1.37:27017/data?authSource=admin',\n'mongodb://tutorism:1234@127.0.0.1:27017/data?authSource=admin', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}); // // DB connection\n\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n  // we're connected!\n  console.log('DB connected');\n});\nvar tempSchema = mongoose.Schema({\n  temp: Number,\n  day: String,\n  date: String,\n  month: String,\n  year: String,\n  hour: String,\n  minute: String,\n  second: String\n}, {\n  collection: 'temp'\n});\nvar Temp = mongoose.model('Temp', tempSchema);\napp.get('/', function (req, res) {\n  return res.status(200).send('hello');\n});\napp.get('/temp', function (req, res) {\n  // Define data\n  var temp = req.query.temp;\n  var timestamp = '' + new Date(Date.now()).toString().split('G')[0];\n  var tmp = timestamp.split(' ');\n  var day = tmp[0];\n  var times = tmp[4].split(':');\n  var hour = times[0];\n  var minute = times[1];\n  var second = times[2];\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth() + 1 < 10 ? '0' + (now.getMonth() + 1) : now.getMonth() + 1;\n  var date = now.getDate(); // Publish to frontend\n\n  client.publish('temp', '' + temp);\n  client.publish('timestamp', timestamp); // Write on DB\n\n  var tempItem = new Temp({\n    temp: temp,\n    day: day,\n    date: date,\n    month: month,\n    year: year,\n    hour: hour,\n    minute: minute,\n    second: second\n  });\n  tempItem.save().then(function (doc) {\n    return console.log(doc);\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n  return res.status(200).send('success');\n});\napp.get('/temp/date', function (req, res) {\n  var _req$query = req.query,\n      date = _req$query.date,\n      month = _req$query.month,\n      year = _req$query.year;\n  Temp.find({\n    date: date,\n    month: month,\n    year: year\n  }).then(function (doc) {\n    console.log(doc);\n    return res.status(200).json({\n      log: doc\n    });\n  })[\"catch\"](function (err) {\n    console.log(err);\n    return res.status(401).json({\n      log: 'success'\n    });\n  });\n});\napp.get('/temp/temp', function (req, res) {\n  var temp = req.query.temp;\n  Temp.find({\n    temp: temp\n  }).then(function (doc) {\n    console.log(doc);\n    return res.status(200).json({\n      log: doc\n    });\n  })[\"catch\"](function (err) {\n    console.log(err);\n    return res.status(401).json({\n      log: 'success'\n    });\n  });\n});\napp.get('/temp/remove', function (req, res) {\n  var id = req.query.id;\n  console.log(id);\n  Temp.remove({\n    _id: id\n  }).then(function (doc) {\n    console.log(doc);\n    return res.status(200).json({\n      log: doc\n    });\n  })[\"catch\"](function (err) {\n    console.log(err);\n    return res.status(401).json({\n      log: 'success'\n    });\n  });\n});\napp.get('/temp/update', function (req, res) {\n  var _req$query2 = req.query,\n      id = _req$query2.id,\n      temp = _req$query2.temp,\n      date = _req$query2.date,\n      month = _req$query2.month,\n      year = _req$query2.year,\n      hour = _req$query2.hour,\n      minute = _req$query2.minute,\n      second = _req$query2.second;\n  Temp.findOneAndUpdate({\n    _id: id\n  }, {\n    temp: temp,\n    date: date,\n    month: month,\n    year: year,\n    hour: hour,\n    minute: minute,\n    second: second\n  }).then(function (doc) {\n    console.log(doc);\n    return res.status(200).json({\n      log: doc\n    });\n  })[\"catch\"](function (err) {\n    console.log(err);\n    return res.status(401).json({\n      log: 'success'\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwiYXBwIiwidXNlIiwibGlzdGVuIiwibXF0dCIsInJlcXVpcmUiLCJjbGllbnQiLCJjb25uZWN0IiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImNvbnNvbGUiLCJsb2ciLCJjb25uZWN0ZWQiLCJvbiIsInB1Ymxpc2giLCJlcnJvciIsIm1vbmdvb3NlIiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJjb25uZWN0aW9uIiwiYmluZCIsIm9uY2UiLCJ0ZW1wU2NoZW1hIiwiU2NoZW1hIiwidGVtcCIsIk51bWJlciIsImRheSIsIlN0cmluZyIsImRhdGUiLCJtb250aCIsInllYXIiLCJob3VyIiwibWludXRlIiwic2Vjb25kIiwiY29sbGVjdGlvbiIsIlRlbXAiLCJtb2RlbCIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiLCJxdWVyeSIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJ0b1N0cmluZyIsInNwbGl0IiwidG1wIiwidGltZXMiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsInRlbXBJdGVtIiwic2F2ZSIsInRoZW4iLCJkb2MiLCJlcnIiLCJmaW5kIiwianNvbiIsImlkIiwicmVtb3ZlIiwiX2lkIiwiZmluZE9uZUFuZFVwZGF0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBL0I7QUFDQSxJQUFJRyxHQUFHLEdBQUcsMEJBQVY7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7QUFDQUQsR0FBRyxDQUFDRSxNQUFKLENBQVdMLElBQVgsRSxDQUVBOztBQUNBLElBQUlNLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixJQUFJLENBQUNH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R0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQm1CLElBQWhCLENBQXFCO0FBQUVqRCxNQUFBQSxHQUFHLEVBQUU4QztBQUFQLEtBQXJCLENBQVA7QUFDRCxHQVBILFdBUVMsVUFBQ0MsR0FBRCxFQUFTO0FBQ2RoRCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWStDLEdBQVo7QUFDQSxXQUFPbEIsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQm1CLElBQWhCLENBQXFCO0FBQUVqRCxNQUFBQSxHQUFHLEVBQUU7QUFBUCxLQUFyQixDQUFQO0FBQ0QsR0FYSDtBQVlELENBZEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3RoYW5hd2F0LmJjci9EZXNrdG9wL29zLXByb2plY3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcblxudmFyIFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDA7XG52YXIgYXBwID0gZXhwcmVzcygpO1xuYXBwLnVzZShjb3JzKCkpO1xuYXBwLmxpc3RlbihQT1JUKTtcblxuLy8gbXF0dCBjb25uZWN0aW9uXG52YXIgbXF0dCA9IHJlcXVpcmUoJ21xdHQnKTtcbnZhciBjbGllbnQgPSBtcXR0LmNvbm5lY3QoJ21xdHQ6Ly8xMjcuMC4wLjE6MTg4MycsIHtcbiAgdXNlcm5hbWU6ICd0dXRvcmlzbScsXG4gIHBhc3N3b3JkOiAnMTIzNCcsXG59KTtcbi8vIHZhciBjbGllbnQgPSBtcXR0LmNvbm5lY3QoJ21xdHQ6Ly8xOTIuMTY4LjEuMzc6MTg4MycsIHtcbi8vICAgdXNlcm5hbWU6ICd0dXRvcmlzbScsXG4vLyAgIHBhc3N3b3JkOiAnMTIzNCcsXG4vLyB9KTtcbmNvbnNvbGUubG9nKCdjb25uZWN0ZWQgICcgKyBjbGllbnQuY29ubmVjdGVkKTtcblxuY2xpZW50Lm9uKCdjb25uZWN0JywgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZygnY29ubmVjdGVkICAnICsgY2xpZW50LmNvbm5lY3RlZCk7XG4gIGNsaWVudC5wdWJsaXNoKCd0ZXN0JywgJ2Nvbm5lY3RlZCcpO1xufSk7XG5cbmNsaWVudC5vbignZXJyb3InLCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgY29uc29sZS5sb2coXCJDYW4ndCBjb25uZWN0XCIgKyBlcnJvcik7XG59KTtcblxuLy8gbW9uZ29vc2UgY29ubmVjdGlvblxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xubW9uZ29vc2UuY29ubmVjdChcbiAgLy8gJ21vbmdvZGI6Ly90dXRvcmlzbToxMjM0QDE5Mi4xNjguMS4zNzoyNzAxNy9kYXRhP2F1dGhTb3VyY2U9YWRtaW4nLFxuICAnbW9uZ29kYjovL3R1dG9yaXNtOjEyMzRAMTI3LjAuMC4xOjI3MDE3L2RhdGE/YXV0aFNvdXJjZT1hZG1pbicsXG4gIHtcbiAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXG4gICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxuICB9XG4pO1xuXG4vLyAvLyBEQiBjb25uZWN0aW9uXG5jb25zdCBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XG5kYi5vbignZXJyb3InLCBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSwgJ2Nvbm5lY3Rpb24gZXJyb3I6JykpO1xuZGIub25jZSgnb3BlbicsIGZ1bmN0aW9uICgpIHtcbiAgLy8gd2UncmUgY29ubmVjdGVkIVxuICBjb25zb2xlLmxvZygnREIgY29ubmVjdGVkJyk7XG59KTtcblxuY29uc3QgdGVtcFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYShcbiAge1xuICAgIHRlbXA6IE51bWJlcixcbiAgICBkYXk6IFN0cmluZyxcbiAgICBkYXRlOiBTdHJpbmcsXG4gICAgbW9udGg6IFN0cmluZyxcbiAgICB5ZWFyOiBTdHJpbmcsXG4gICAgaG91cjogU3RyaW5nLFxuICAgIG1pbnV0ZTogU3RyaW5nLFxuICAgIHNlY29uZDogU3RyaW5nLFxuICB9LFxuICB7IGNvbGxlY3Rpb246ICd0ZW1wJyB9XG4pO1xuY29uc3QgVGVtcCA9IG1vbmdvb3NlLm1vZGVsKCdUZW1wJywgdGVtcFNjaGVtYSk7XG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdoZWxsbycpO1xufSk7XG5cbmFwcC5nZXQoJy90ZW1wJywgKHJlcSwgcmVzKSA9PiB7XG4gIC8vIERlZmluZSBkYXRhXG4gIGNvbnN0IHsgdGVtcCB9ID0gcmVxLnF1ZXJ5O1xuICBjb25zdCB0aW1lc3RhbXAgPSAnJyArIG5ldyBEYXRlKERhdGUubm93KCkpLnRvU3RyaW5nKCkuc3BsaXQoJ0cnKVswXTtcbiAgY29uc3QgdG1wID0gdGltZXN0YW1wLnNwbGl0KCcgJyk7XG4gIGNvbnN0IGRheSA9IHRtcFswXTtcbiAgY29uc3QgdGltZXMgPSB0bXBbNF0uc3BsaXQoJzonKTtcbiAgY29uc3QgaG91ciA9IHRpbWVzWzBdO1xuICBjb25zdCBtaW51dGUgPSB0aW1lc1sxXTtcbiAgY29uc3Qgc2Vjb25kID0gdGltZXNbMl07XG5cbiAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgY29uc3QgeWVhciA9IG5vdy5nZXRGdWxsWWVhcigpO1xuICBjb25zdCBtb250aCA9XG4gICAgbm93LmdldE1vbnRoKCkgKyAxIDwgMTAgPyAnMCcgKyAobm93LmdldE1vbnRoKCkgKyAxKSA6IG5vdy5nZXRNb250aCgpICsgMTtcbiAgY29uc3QgZGF0ZSA9IG5vdy5nZXREYXRlKCk7XG5cbiAgLy8gUHVibGlzaCB0byBmcm9udGVuZFxuICBjbGllbnQucHVibGlzaCgndGVtcCcsICcnICsgdGVtcCk7XG4gIGNsaWVudC5wdWJsaXNoKCd0aW1lc3RhbXAnLCB0aW1lc3RhbXApO1xuXG4gIC8vIFdyaXRlIG9uIERCXG4gIGNvbnN0IHRlbXBJdGVtID0gbmV3IFRlbXAoe1xuICAgIHRlbXAsXG4gICAgZGF5LFxuICAgIGRhdGUsXG4gICAgbW9udGgsXG4gICAgeWVhcixcbiAgICBob3VyLFxuICAgIG1pbnV0ZSxcbiAgICBzZWNvbmQsXG4gIH0pO1xuXG4gIHRlbXBJdGVtXG4gICAgLnNhdmUoKVxuICAgIC50aGVuKChkb2MpID0+IGNvbnNvbGUubG9nKGRvYykpXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoJ3N1Y2Nlc3MnKTtcbn0pO1xuXG5hcHAuZ2V0KCcvdGVtcC9kYXRlJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgZGF0ZSwgbW9udGgsIHllYXIgfSA9IHJlcS5xdWVyeTtcbiAgVGVtcC5maW5kKHsgZGF0ZTogZGF0ZSwgbW9udGg6IG1vbnRoLCB5ZWFyOiB5ZWFyIH0pXG4gICAgLnRoZW4oKGRvYykgPT4ge1xuICAgICAgY29uc29sZS5sb2coZG9jKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IGxvZzogZG9jIH0pO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBsb2c6ICdzdWNjZXNzJyB9KTtcbiAgICB9KTtcbn0pO1xuXG5hcHAuZ2V0KCcvdGVtcC90ZW1wJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdGVtcCB9ID0gcmVxLnF1ZXJ5O1xuICBUZW1wLmZpbmQoeyB0ZW1wOiB0ZW1wIH0pXG4gICAgLnRoZW4oKGRvYykgPT4ge1xuICAgICAgY29uc29sZS5sb2coZG9jKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IGxvZzogZG9jIH0pO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBsb2c6ICdzdWNjZXNzJyB9KTtcbiAgICB9KTtcbn0pO1xuXG5hcHAuZ2V0KCcvdGVtcC9yZW1vdmUnLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnF1ZXJ5O1xuICBjb25zb2xlLmxvZyhpZCk7XG5cbiAgVGVtcC5yZW1vdmUoeyBfaWQ6IGlkIH0pXG4gICAgLnRoZW4oKGRvYykgPT4ge1xuICAgICAgY29uc29sZS5sb2coZG9jKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IGxvZzogZG9jIH0pO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBsb2c6ICdzdWNjZXNzJyB9KTtcbiAgICB9KTtcbn0pO1xuYXBwLmdldCgnL3RlbXAvdXBkYXRlJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgaWQsIHRlbXAsIGRhdGUsIG1vbnRoLCB5ZWFyLCBob3VyLCBtaW51dGUsIHNlY29uZCB9ID0gcmVxLnF1ZXJ5O1xuICBUZW1wLmZpbmRPbmVBbmRVcGRhdGUoXG4gICAgeyBfaWQ6IGlkIH0sXG4gICAgeyB0ZW1wLCBkYXRlLCBtb250aCwgeWVhciwgaG91ciwgbWludXRlLCBzZWNvbmQgfVxuICApXG4gICAgLnRoZW4oKGRvYykgPT4ge1xuICAgICAgY29uc29sZS5sb2coZG9jKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IGxvZzogZG9jIH0pO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBsb2c6ICdzdWNjZXNzJyB9KTtcbiAgICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "PORT",
        "process",
        "env",
        "app",
        "use",
        "listen",
        "mqtt",
        "require",
        "client",
        "connect",
        "username",
        "password",
        "console",
        "log",
        "connected",
        "on",
        "publish",
        "error",
        "mongoose",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "connection",
        "bind",
        "once",
        "tempSchema",
        "Schema",
        "temp",
        "Number",
        "day",
        "String",
        "date",
        "month",
        "year",
        "hour",
        "minute",
        "second",
        "collection",
        "Temp",
        "model",
        "get",
        "req",
        "res",
        "status",
        "send",
        "query",
        "timestamp",
        "Date",
        "now",
        "toString",
        "split",
        "tmp",
        "times",
        "getFullYear",
        "getMonth",
        "getDate",
        "tempItem",
        "save",
        "then",
        "doc",
        "err",
        "find",
        "json",
        "id",
        "remove",
        "_id",
        "findOneAndUpdate"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
      "sourcesContent": [
        "import express from 'express';\nimport cors from 'cors';\n\nvar PORT = process.env.PORT || 3000;\nvar app = express();\napp.use(cors());\napp.listen(PORT);\n\n// mqtt connection\nvar mqtt = require('mqtt');\nvar client = mqtt.connect('mqtt://127.0.0.1:1883', {\n  username: 'tutorism',\n  password: '1234',\n});\n// var client = mqtt.connect('mqtt://192.168.1.37:1883', {\n//   username: 'tutorism',\n//   password: '1234',\n// });\nconsole.log('connected  ' + client.connected);\n\nclient.on('connect', function () {\n  console.log('connected  ' + client.connected);\n  client.publish('test', 'connected');\n});\n\nclient.on('error', function (error) {\n  console.log(\"Can't connect\" + error);\n});\n\n// mongoose connection\nconst mongoose = require('mongoose');\nmongoose.connect(\n  // 'mongodb://tutorism:1234@192.168.1.37:27017/data?authSource=admin',\n  'mongodb://tutorism:1234@127.0.0.1:27017/data?authSource=admin',\n  {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  }\n);\n\n// // DB connection\nconst db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n  // we're connected!\n  console.log('DB connected');\n});\n\nconst tempSchema = mongoose.Schema(\n  {\n    temp: Number,\n    day: String,\n    date: String,\n    month: String,\n    year: String,\n    hour: String,\n    minute: String,\n    second: String,\n  },\n  { collection: 'temp' }\n);\nconst Temp = mongoose.model('Temp', tempSchema);\n\napp.get('/', (req, res) => {\n  return res.status(200).send('hello');\n});\n\napp.get('/temp', (req, res) => {\n  // Define data\n  const { temp } = req.query;\n  const timestamp = '' + new Date(Date.now()).toString().split('G')[0];\n  const tmp = timestamp.split(' ');\n  const day = tmp[0];\n  const times = tmp[4].split(':');\n  const hour = times[0];\n  const minute = times[1];\n  const second = times[2];\n\n  const now = new Date();\n  const year = now.getFullYear();\n  const month =\n    now.getMonth() + 1 < 10 ? '0' + (now.getMonth() + 1) : now.getMonth() + 1;\n  const date = now.getDate();\n\n  // Publish to frontend\n  client.publish('temp', '' + temp);\n  client.publish('timestamp', timestamp);\n\n  // Write on DB\n  const tempItem = new Temp({\n    temp,\n    day,\n    date,\n    month,\n    year,\n    hour,\n    minute,\n    second,\n  });\n\n  tempItem\n    .save()\n    .then((doc) => console.log(doc))\n    .catch((err) => console.log(err));\n  return res.status(200).send('success');\n});\n\napp.get('/temp/date', (req, res) => {\n  const { date, month, year } = req.query;\n  Temp.find({ date: date, month: month, year: year })\n    .then((doc) => {\n      console.log(doc);\n      return res.status(200).json({ log: doc });\n    })\n    .catch((err) => {\n      console.log(err);\n      return res.status(401).json({ log: 'success' });\n    });\n});\n\napp.get('/temp/temp', (req, res) => {\n  const { temp } = req.query;\n  Temp.find({ temp: temp })\n    .then((doc) => {\n      console.log(doc);\n      return res.status(200).json({ log: doc });\n    })\n    .catch((err) => {\n      console.log(err);\n      return res.status(401).json({ log: 'success' });\n    });\n});\n\napp.get('/temp/remove', (req, res) => {\n  const { id } = req.query;\n  console.log(id);\n\n  Temp.remove({ _id: id })\n    .then((doc) => {\n      console.log(doc);\n      return res.status(200).json({ log: doc });\n    })\n    .catch((err) => {\n      console.log(err);\n      return res.status(401).json({ log: 'success' });\n    });\n});\napp.get('/temp/update', (req, res) => {\n  const { id, temp, date, month, year, hour, minute, second } = req.query;\n  Temp.findOneAndUpdate(\n    { _id: id },\n    { temp, date, month, year, hour, minute, second }\n  )\n    .then((doc) => {\n      console.log(doc);\n      return res.status(200).json({ log: doc });\n    })\n    .catch((err) => {\n      console.log(err);\n      return res.status(401).json({ log: 'success' });\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619363049069
  }
}