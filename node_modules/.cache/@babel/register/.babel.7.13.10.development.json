{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/thanawat.bcr/Desktop/os-project/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/thanawat.bcr/Desktop/os-project\",\"filename\":\"/Users/thanawat.bcr/Desktop/os-project/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/thanawat.bcr/Desktop/os-project\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/thanawat.bcr/Desktop/os-project",
      "filename": "/Users/thanawat.bcr/Desktop/os-project/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/thanawat.bcr/Desktop/os-project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/thanawat.bcr/Desktop/os-project/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/thanawat.bcr/Desktop/os-project/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar mongoose = require('mongoose');\n\nmongoose.connect('mongodb://tutorism:1234@172.16.167.2:27017/test?authSource=admin', // 'mongodb://tutorism:1234@127.0.0.1:27017/test?authSource=admin',\n{\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar PORT = process.env.PORT || 80;\nvar app = (0, _express[\"default\"])();\napp.listen(PORT); // DB connection\n\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n  // we're connected!\n  console.log('DB connected');\n}); // Test schema\n\nvar productSchema = mongoose.Schema({\n  name: String,\n  price: Number\n});\nvar Product = mongoose.model('Product', productSchema);\nvar userSchema = mongoose.Schema({\n  name: String,\n  age: Number\n}, {\n  collection: 'user'\n});\nvar User = mongoose.model('User', userSchema);\napp.get('/', function (req, res) {\n  return res.status(200).send('hello');\n});\napp.get('/test', function (req, res) {\n  var product = new Product({\n    name: 'Tutor',\n    price: 1000\n  });\n  product.save().then(function (doc) {\n    return console.log(doc);\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n  return res.status(200).send('hello');\n});\napp.get('/insert/user', function (req, res) {\n  var user = new User({\n    name: 'No Collection',\n    age: 20\n  });\n  user.save().then(function (doc) {\n    console.log(doc);\n    return res.status(200).send('hello');\n  })[\"catch\"](function (err) {\n    console.log(err);\n    return res.status(400).send('hello');\n  });\n});\napp.get('/find/user', function (req, res) {\n  User.find().then(function (doc) {\n    console.log(doc);\n    return res.status(200).json({\n      log: doc\n    });\n  })[\"catch\"](function (err) {\n    console.log(err);\n    return res.status(401).json({\n      log: 'success'\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsImFwcCIsImxpc3RlbiIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiY29uc29sZSIsImVycm9yIiwiYmluZCIsIm9uY2UiLCJsb2ciLCJwcm9kdWN0U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsInByaWNlIiwiTnVtYmVyIiwiUHJvZHVjdCIsIm1vZGVsIiwidXNlclNjaGVtYSIsImFnZSIsImNvbGxlY3Rpb24iLCJVc2VyIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwic2VuZCIsInByb2R1Y3QiLCJzYXZlIiwidGhlbiIsImRvYyIsImVyciIsInVzZXIiLCJmaW5kIiwianNvbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUVBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0FELFFBQVEsQ0FBQ0UsT0FBVCxDQUNFLGtFQURGLEVBRUU7QUFDQTtBQUNFQyxFQUFBQSxlQUFlLEVBQUUsSUFEbkI7QUFFRUMsRUFBQUEsa0JBQWtCLEVBQUU7QUFGdEIsQ0FIRjtBQVNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsRUFBL0I7QUFDQSxJQUFJRyxHQUFHLEdBQUcsMEJBQVY7QUFDQUEsR0FBRyxDQUFDQyxNQUFKLENBQVdKLElBQVgsRSxDQUVBOztBQUNBLElBQU1LLEVBQUUsR0FBR1YsUUFBUSxDQUFDVyxVQUFwQjtBQUNBRCxFQUFFLENBQUNFLEVBQUgsQ0FBTSxPQUFOLEVBQWVDLE9BQU8sQ0FBQ0MsS0FBUixDQUFjQyxJQUFkLENBQW1CRixPQUFuQixFQUE0QixtQkFBNUIsQ0FBZjtBQUNBSCxFQUFFLENBQUNNLElBQUgsQ0FBUSxNQUFSLEVBQWdCLFlBQVk7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LEtBQXJCLENBQVA7QUFDRCxHQUpILFdBS1MsVUFBQ0MsR0FBRCxFQUFTO0FBQ2QxQixJQUFBQSxPQUFPLENBQUNJLEdBQVIsQ0FBWXNCLEdBQVo7QUFDQSxXQUFPUCxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCUyxJQUFoQixDQUFxQjtBQUFFekIsTUFBQUEsR0FBRyxFQUFFO0FBQVAsS0FBckIsQ0FBUDtBQUNELEdBUkg7QUFTRCxDQVZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90aGFuYXdhdC5iY3IvRGVza3RvcC9vcy1wcm9qZWN0LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5tb25nb29zZS5jb25uZWN0KFxuICAnbW9uZ29kYjovL3R1dG9yaXNtOjEyMzRAMTcyLjE2LjE2Ny4yOjI3MDE3L3Rlc3Q/YXV0aFNvdXJjZT1hZG1pbicsXG4gIC8vICdtb25nb2RiOi8vdHV0b3Jpc206MTIzNEAxMjcuMC4wLjE6MjcwMTcvdGVzdD9hdXRoU291cmNlPWFkbWluJyxcbiAge1xuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4gIH1cbik7XG5cbnZhciBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDtcbnZhciBhcHAgPSBleHByZXNzKCk7XG5hcHAubGlzdGVuKFBPUlQpO1xuXG4vLyBEQiBjb25uZWN0aW9uXG5jb25zdCBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XG5kYi5vbignZXJyb3InLCBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSwgJ2Nvbm5lY3Rpb24gZXJyb3I6JykpO1xuZGIub25jZSgnb3BlbicsIGZ1bmN0aW9uICgpIHtcbiAgLy8gd2UncmUgY29ubmVjdGVkIVxuICBjb25zb2xlLmxvZygnREIgY29ubmVjdGVkJyk7XG59KTtcblxuLy8gVGVzdCBzY2hlbWFcbmNvbnN0IHByb2R1Y3RTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuICBuYW1lOiBTdHJpbmcsXG4gIHByaWNlOiBOdW1iZXIsXG59KTtcbmNvbnN0IFByb2R1Y3QgPSBtb25nb29zZS5tb2RlbCgnUHJvZHVjdCcsIHByb2R1Y3RTY2hlbWEpO1xuXG5jb25zdCB1c2VyU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hKFxuICB7XG4gICAgbmFtZTogU3RyaW5nLFxuICAgIGFnZTogTnVtYmVyLFxuICB9LFxuICB7IGNvbGxlY3Rpb246ICd1c2VyJyB9XG4pO1xuY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgdXNlclNjaGVtYSk7XG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdoZWxsbycpO1xufSk7XG5cbmFwcC5nZXQoJy90ZXN0JywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHByb2R1Y3QgPSBuZXcgUHJvZHVjdCh7XG4gICAgbmFtZTogJ1R1dG9yJyxcbiAgICBwcmljZTogMTAwMCxcbiAgfSk7XG4gIHByb2R1Y3RcbiAgICAuc2F2ZSgpXG4gICAgLnRoZW4oKGRvYykgPT4gY29uc29sZS5sb2coZG9jKSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XG4gIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZCgnaGVsbG8nKTtcbn0pO1xuXG5hcHAuZ2V0KCcvaW5zZXJ0L3VzZXInLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgdXNlciA9IG5ldyBVc2VyKHtcbiAgICBuYW1lOiAnTm8gQ29sbGVjdGlvbicsXG4gICAgYWdlOiAyMCxcbiAgfSk7XG5cbiAgdXNlclxuICAgIC5zYXZlKClcbiAgICAudGhlbigoZG9jKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhkb2MpO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdoZWxsbycpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoJ2hlbGxvJyk7XG4gICAgfSk7XG59KTtcblxuYXBwLmdldCgnL2ZpbmQvdXNlcicsIChyZXEsIHJlcykgPT4ge1xuICBVc2VyLmZpbmQoKVxuICAgIC50aGVuKChkb2MpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGRvYyk7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBsb2c6IGRvYyB9KTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbG9nOiAnc3VjY2VzcycgfSk7XG4gICAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "require",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "PORT",
        "process",
        "env",
        "app",
        "listen",
        "db",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "once",
        "log",
        "productSchema",
        "Schema",
        "name",
        "String",
        "price",
        "Number",
        "Product",
        "model",
        "userSchema",
        "age",
        "collection",
        "User",
        "get",
        "req",
        "res",
        "status",
        "send",
        "product",
        "save",
        "then",
        "doc",
        "err",
        "user",
        "find",
        "json"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/thanawat.bcr/Desktop/os-project/",
      "sourcesContent": [
        "import express from 'express';\n\nconst mongoose = require('mongoose');\nmongoose.connect(\n  'mongodb://tutorism:1234@172.16.167.2:27017/test?authSource=admin',\n  // 'mongodb://tutorism:1234@127.0.0.1:27017/test?authSource=admin',\n  {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  }\n);\n\nvar PORT = process.env.PORT || 80;\nvar app = express();\napp.listen(PORT);\n\n// DB connection\nconst db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n  // we're connected!\n  console.log('DB connected');\n});\n\n// Test schema\nconst productSchema = mongoose.Schema({\n  name: String,\n  price: Number,\n});\nconst Product = mongoose.model('Product', productSchema);\n\nconst userSchema = mongoose.Schema(\n  {\n    name: String,\n    age: Number,\n  },\n  { collection: 'user' }\n);\nconst User = mongoose.model('User', userSchema);\n\napp.get('/', (req, res) => {\n  return res.status(200).send('hello');\n});\n\napp.get('/test', (req, res) => {\n  const product = new Product({\n    name: 'Tutor',\n    price: 1000,\n  });\n  product\n    .save()\n    .then((doc) => console.log(doc))\n    .catch((err) => console.log(err));\n  return res.status(200).send('hello');\n});\n\napp.get('/insert/user', (req, res) => {\n  const user = new User({\n    name: 'No Collection',\n    age: 20,\n  });\n\n  user\n    .save()\n    .then((doc) => {\n      console.log(doc);\n      return res.status(200).send('hello');\n    })\n    .catch((err) => {\n      console.log(err);\n      return res.status(400).send('hello');\n    });\n});\n\napp.get('/find/user', (req, res) => {\n  User.find()\n    .then((doc) => {\n      console.log(doc);\n      return res.status(200).json({ log: doc });\n    })\n    .catch((err) => {\n      console.log(err);\n      return res.status(401).json({ log: 'success' });\n    });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616571074679
  }
}